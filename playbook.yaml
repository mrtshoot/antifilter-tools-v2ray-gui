---
# Servers_Requirements
- name: Install Requirements Package and Modules
  hosts: server
  remote_user: root
  vars:
    packages:
      - nginx
      - python3-certbot-nginx
      - certbot
      - htop
      - git
      - curl
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - wget
      - gnupg
      - lsb-release
      - jq
  tasks:
    - name: Install Required Packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
        autoremove: yes
        autoclean: yes
      with_items: "{{ packages }}"
      tags:
      - package

# Services
- name: Start Services
  hosts: server
  remote_user: root
  vars:
    services:
      - nginx
  tasks:
    - name: Enable and Start Services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: True
        daemon_reload: True
      with_items: "{{ services }}"
      tags:
      - service

# Tunning
- name: Tunning
  hosts: server
  remote_user: root
  tasks:
    - name: Modify sysctl entries
      sysctl:
        name: '{{ item.key }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - {key: net.ipv4.ip_forward,  value: 1}
      tags:
      - tune

# Define DNS A Record
- name: DNS
  hosts: server
  remote_user: root
  tasks:
    - name: Clone project
      git:
        repo: https://github.com/mrtshoot/antifilter-tools-v2ray-gui.git
        dest: /var/opt/antifilter-tools-v2ray-gui
        accept_hostkey: yes
        remote: origin
        clone: yes
        update: yes
        force: yes
    - name: Define A Record
      shell:
        cmd: printf "%s\n%s\n" "{{ api_token }}" "{{ domain }}" "{{ subdomain }}" "{{ ip_address }}" | bash cf.sh
        chdir: /var/opt/antifilter-tools-v2ray-gui
      vars:
        api_token: "{{ api_token }}"
        domain: "{{ domain }}"
        subdomain: "{{ subdomain }}"
        ip_address: "{{ ip_address }}"
      tags:
      - deploy    

# Deploy V2Ray
- name: Deploy V2ray
  hosts: server
  remote_user: root
  tasks:
    - name: Clone project
      git:
        repo: https://github.com/mrtshoot/antifilter-tools-v2ray-gui.git
        dest: /var/opt/antifilter-tools-v2ray-gui
        accept_hostkey: yes
        remote: origin
        clone: yes
        update: yes
        force: yes  
    - name: Spinning up
      shell:
        cmd: printf "%s\n%s\n" "{{ config_confirm }}" "{{ config_account }}" "{{ config_password }}" "{{ config_port }}" | bash v2ray.sh
        chdir: /var/opt/antifilter-tools-v2ray-gui
      vars:
        config_confirm: "y"
        config_account: "{{ config_account }}"
        config_password: "{{ config_password }}"
        config_port: "{{ config_port }}"
      tags:
      - deploy
      - v2ray

# Deploy Nginx
- name: Deploy V2ray
  hosts: server
  remote_user: root
  tasks:
    - name: Clone project
      git:
        repo: https://github.com/mrtshoot/antifilter-tools-v2ray-gui.git
        dest: /var/opt/antifilter-tools-v2ray-gui
        accept_hostkey: yes
        remote: origin
        clone: yes
        update: yes
        force: yes  
    - name: Spinning up
      shell:
        cmd: printf "%s\n%s\n" "{{ domain }}" "{{ subdomain }}" "{{ proxy_port }}" "{{ email }}" | bash nginx-ssl.sh
        chdir: /var/opt/antifilter-tools-v2ray-gui
      vars:
        domain: "{{ domain }}"
        subdomain: "{{ subdomain }}"
        config_port: "{{ config_port }}"
        email: "{{ email }}"
      tags:
      - deploy
      - nginx